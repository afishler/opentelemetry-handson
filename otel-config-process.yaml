receivers:
  otlp:
    protocols:
      grpc:
        endpoint: localhost:4317
      http:
        endpoint: localhost:4318

processors:
  batch: {}
  transform/log_level:
    error_mode: ignore
    log_statements:
      - context: log
        statements:
          # set log_level
          - set(attributes["log_level"], "INFO")
          - set(attributes["log_level"], "DEBUG") where (IsMatch(body, ".*\\b(?i:debug)\\b.*"))
          - set(attributes["log_level"], "WARNING") where (IsMatch(body, ".*\\b(?i:warning|warn)\\b.*"))
          - set(attributes["log_level"], "ERROR") where (IsMatch(body, ".*(?i:(?:error|fail|failure|exception|panic)).*"))
  transform/dedot:
    error_mode: ignore
    log_statements:
      - context: resource
        statements:
          - replace_all_patterns(attributes, "key", "\\.", "_")
      - context: log
        statements:
          - replace_all_patterns(attributes, "key", "\\.", "_") 

  tail_sampling:
    policies:
      [
          {
            name: error-in-policy,
            type: status_code,
            status_code: {status_codes: [ERROR]}
          },
          {
            name: slow-traces-policy,
            type: latency,
            latency: {threshold_ms: "1000" }            
          }
      ]

exporters:
  debug:
    verbosity: detailed  
  logzio/logs:
    account_token: xxxxxxxxxxxxxxxxxx
    region: us
    headers:
      user-agent: "akamai-handson-29-01-25"
  logzio/traces:
    account_token: yyyyyyyyyyyyyyyyyyyy
    region: us
    headers:
      user-agent: "akamai-handson-29-01-25"


service:
  pipelines:
    traces:
      receivers:
      - otlp
      processors: [tail_sampling, batch]
      exporters:
      - debug
      - logzio/traces
    logs:
      receivers:
      - otlp
      processors: [transform/dedot, transform/log_level,batch]
      exporters:
      - debug
      - logzio/logs
